import React, { useState } from "react";
import { FaDownload } from "react-icons/fa";
import Navbar from "./Navbar";
import axios from "axios";
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';
import schoollogo from "./assets/schoollogo.jpg";

function StudentResult() {
  const [rollNumber, setRollNumber] = useState("");
  const [result, setResult] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const handleSearch = async (e) => {
    e.preventDefault();
    setLoading(true);
    setError("");
    setResult(null);

    try {
      const response = await axios.get(
        `${import.meta.env.VITE_BASE_GET_RESULT}${rollNumber}`
      );
      if (!response.data.success) {
        throw new Error("Failed to fetch result");
      }
      const studentData = response.data.student;
      if (!studentData.feesPaid) {
        setError("Fees not paid. Please submit your fees to view the result.");
      } else {
        setResult(studentData);
      }
    } catch (err) {
      setError(err.message || "No result found for this roll number");
    } finally {
      setLoading(false);
    }
  };

  const handleDownload = async () => {
    const input = document.getElementById("result-card");
    if (!input) return;

    const canvas = await html2canvas(input, {
      useCORS: true,
      scale: 2,
    });

    const imgData = canvas.toDataURL("image/png");
    const pdf = new jsPDF("p", "mm", "a4");

    const pageWidth = pdf.internal.pageSize.getWidth();
    const pageHeight = pdf.internal.pageSize.getHeight();

    const imgProps = pdf.getImageProperties(imgData);
    const imgHeight = (imgProps.height * pageWidth) / imgProps.width;

    pdf.addImage(imgData, "PNG", 0, 0, pageWidth, imgHeight);

    // Add footer
    pdf.setFontSize(10);
    pdf.setTextColor(150);
    pdf.text(
      "Generated by RPS School | rpsschool.edu",
      pageWidth / 2,
      pageHeight - 10,
      { align: "center" }
    );

    // Save with student name
    pdf.save(`${result.name.replace(/\s/g, "_")}_Result.pdf`);
  };

  return (
    <div>
      <Navbar />
      <div className="min-h-screen mt-16 bg-gray-100 pb-20">
        <div className="max-w-6xl mx-auto px-4 py-12">
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-800">Roopnagar Public School</h1>
            <p className="text-gray-600 mt-2">Roopnagar, NH-52, Kota Road, Jhalawar</p>
            <p className="text-gray-600">Ph : +91 7665543201, 8432050253</p>
          </div>

          <div className="bg-white rounded-lg shadow-md p-6 mb-8 max-w-md mx-auto">
            <form onSubmit={handleSearch} className="space-y-4">
              <div>
                <label
                  htmlFor="rollNumber"
                  className="block text-sm font-medium text-gray-700 mb-1"
                >
                  Enter Roll Number
                </label>
                <input
                  type="text"
                  id="rollNumber"
                  value={rollNumber}
                  onChange={(e) => setRollNumber(e.target.value)}
                  required
                  className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="e.g. 8A028"
                />
              </div>
              <button
                type="submit"
                disabled={loading}
                className="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md transition duration-300"
              >
                {loading ? "Searching..." : "View Result"}
              </button>
            </form>
            {error && (
              <div className={`mt-4 p-3 rounded-md text-sm ${
                error.includes("Fees not paid")
                  ? "bg-yellow-100 text-yellow-800"
                  : "bg-red-100 text-red-700"
              }`}>
                {error}
              </div>
            )}
          </div>

          {result && (
            <div
              id="result-card"
              className="bg-white rounded-lg shadow-lg overflow-hidden border border-gray-300"
            >
              {/* Header */}
              <div className="text-center py-4 border-b border-gray-300">
                <h1 className="text-2xl font-bold">Roopnagar Public School, Jhalawar</h1>
                <p className="text-sm">Roopnagar, NH-52, Kota Road, Jhalawar</p>
                <p className="text-sm">Ph : +91 7665543201, 8432050253</p>
                <h2 className="text-xl font-semibold mt-2">Annual Report Card : {result.className} (2024-25)</h2>
              </div>

              {/* Student Profile */}
              <div className="p-4 border-b border-gray-300">
                <table className="w-full border-collapse">
                  <thead>
                    <tr>
                      <th colSpan="4" className="text-left font-bold py-2 bg-gray-100">STUDENT PROFILE</th>
                    </tr>
                  </thead>
                  <tbody>
                    <tr>
                      <td className="py-1 font-medium">Student's Name</td>
                      <td className="py-1">: {result.name}</td>
                      <td className="py-1 font-medium">Roll No.</td>
                      <td className="py-1">: {result.rollNo}</td>
                    </tr>
                    <tr>
                      <td className="py-1 font-medium">Mother's Name</td>
                      <td className="py-1">: {result.motherName}</td>
                      <td className="py-1 font-medium">Admission No.</td>
                      <td className="py-1">: {result.admissionNo || 'N/A'}</td>
                    </tr>
                    <tr>
                      <td className="py-1 font-medium">Father's Name</td>
                      <td className="py-1">: {result.fatherName}</td>
                      <td className="py-1 font-medium">Date of Birth</td>
                      <td className="py-1">: {result.dob ? new Date(result.dob).toLocaleDateString() : 'N/A'}</td>
                    </tr>
                    <tr>
                      <td className="py-1 font-medium">Class</td>
                      <td className="py-1">: {result.className}</td>
                      <td className="py-1"></td>
                      <td className="py-1"></td>
                    </tr>
                  </tbody>
                </table>
              </div>

              {/* Attendance */}
              <div className="p-4 border-b border-gray-300">
                <h3 className="font-bold mb-2">ATTENDANCE</h3>
                <p className="text-center font-medium">Total No. of Present Days : {result.totalPresentDays || 0}</p>
              </div>

              {/* Scholastic Areas */}
              <div className="p-4 border-b border-gray-300">
                <h3 className="font-bold mb-2 text-center">SCHOLASTIC AREAS</h3>
                <table className="w-full border-collapse text-sm">
                  <thead>
                    <tr>
                      <th rowSpan="2" className="border border-gray-300 px-2 py-1">Subjects</th>
                      <th colSpan="4" className="border border-gray-300 px-2 py-1 text-center">TERM I</th>
                      <th colSpan="4" className="border border-gray-300 px-2 py-1 text-center">TERM II</th>
                    </tr>
                    <tr>
                      <th className="border border-gray-300 px-2 py-1">PT-I</th>
                      <th className="border border-gray-300 px-2 py-1">NB-I</th>
                      <th className="border border-gray-300 px-2 py-1">SEA-I</th>
                      <th className="border border-gray-300 px-2 py-1">Half Yearly</th>
                      <th className="border border-gray-300 px-2 py-1">Total Marks (100)</th>
                      <th className="border border-gray-300 px-2 py-1">PT-II</th>
                      <th className="border border-gray-300 px-2 py-1">NB-II</th>
                      <th className="border border-gray-300 px-2 py-1">SEA-II</th>
                      <th className="border border-gray-300 px-2 py-1">Annual Exam</th>
                      <th className="border border-gray-300 px-2 py-1">Total Mark (100)</th>
                    </tr>
                  </thead>
                  <tbody>
                    {result.subjects.map((subject, index) => (
                      <tr key={index}>
                        <td className="border border-gray-300 px-2 py-1">{subject.name}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term1?.pt1 || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term1?.nb1 || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term1?.sea1 || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term1?.halfYearly || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term1?.total || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term2?.pt2 || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term2?.nb2 || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term2?.sea2 || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term2?.annualExam || '-'}</td>
                        <td className="border border-gray-300 px-2 py-1 text-center">{subject.term2?.total || '-'}</td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>

              {/* Aggregate Marks */}
              <div className="p-4 border-b border-gray-300">
                <h3 className="font-bold mb-2">Aggregate Marks</h3>
                <h3 className="font-bold mb-2">Aggregate Grade</h3>
              </div>

              {/* Co-Scholastic Areas */}
              <div className="p-4 border-b border-gray-300">
                <h3 className="font-bold mb-2">Co-Scholastic Areas</h3>
                <table className="w-full border-collapse">
                  <tbody>
                    <tr>
                      <td className="py-1">Work & Art Education</td>
                    </tr>
                    <tr>
                      <td className="py-1">Health & Physical Education</td>
                    </tr>
                    <tr>
                      <td className="py-1">Discipline</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              {/* Remarks */}
              <div className="p-4 border-b border-gray-300">
                <h3 className="font-bold mb-2">CLASS TEACHER'S REMARK</h3>
                <p className="border border-gray-300 p-2 rounded">Good</p>
                <p className="mt-2 font-medium">PROMOTED TO :- {result.promotedToNextClass ? result.className.replace(/\d+/, n => ++n) : 'Same Class'}</p>
              </div>

              {/* Grading System */}
              <div className="p-4">
                <h3 className="font-bold mb-2">GRADING SYSTEM (SCHOLASTIC)</h3>
                <table className="w-full border-collapse text-center">
                  <tbody>
                    <tr>
                      <td className="border border-gray-300 px-2 py-1">91-100</td>
                      <td className="border border-gray-300 px-2 py-1">81-90</td>
                      <td className="border border-gray-300 px-2 py-1">71-80</td>
                      <td className="border border-gray-300 px-2 py-1">61-70</td>
                      <td className="border border-gray-300 px-2 py-1">51-60</td>
                      <td className="border border-gray-300 px-2 py-1">41-50</td>
                      <td className="border border-gray-300 px-2 py-1">33-40</td>
                    </tr>
                    <tr>
                      <td className="border border-gray-300 px-2 py-1">A1</td>
                      <td className="border border-gray-300 px-2 py-1">A2</td>
                      <td className="border border-gray-300 px-2 py-1">B1</td>
                      <td className="border border-gray-300 px-2 py-1">B2</td>
                      <td className="border border-gray-300 px-2 py-1">C1</td>
                      <td className="border border-gray-300 px-2 py-1">C2</td>
                      <td className="border border-gray-300 px-2 py-1">D</td>
                    </tr>
                  </tbody>
                </table>
              </div>

              {/* Footer */}
              <div className="p-4 bg-gray-100 flex justify-between items-center">
                <div>
                  <p>Date : {new Date().toLocaleDateString()}</p>
                </div>
                <div className="text-right">
                  <p>Class Teacher</p>
                  <p>Principal's</p>
                </div>
              </div>

              {/* Download Button */}
              <div className="p-4 text-center">
                <button
                  onClick={handleDownload}
                  className="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-md flex items-center justify-center mx-auto transition duration-300"
                >
                  <FaDownload className="mr-2" />
                  Download Result
                </button>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}

export default StudentResult;